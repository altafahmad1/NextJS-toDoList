import Head from 'next/head';
import TaskItem from '../components/TaskItem';
import Router from 'next/router';
import { useState } from 'react';
import { useSession, signOut, getSession } from 'next-auth/react';

export default function Home(propTasks) {
	const { data: session } = useSession();

	const [tasks, setTasks] = useState(
		propTasks.propTasks ? propTasks.propTasks.tasks[0].tasks : []
	);

	const months = [
		'Jan',
		'Feb',
		'Mar',
		'Apr',
		'May',
		'Jun',
		'Jul',
		'Aug',
		'Sep',
		'Oct',
		'Nov',
		'Dec',
	];

	const date = new Date();
	const currentDate =
		months[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getFullYear();

	const addTask = async (e) => {
		e.preventDefault();
		const newTaskMessage = document.getElementById('newTask').value;
		const newTask = { message: newTaskMessage };
		await fetch(`http://localhost:3000/api/tasks/${session.id}`, {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json',
			},
			body: JSON.stringify(newTask),
		})
			.then((response) => response.json())
			.then((data) => {
				setTasks([...data.tasks[0].tasks]);
			});
	};

	return (
		<div>
			<Head>
				<title>To Do List</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>

			<div className='text-center text-white py-8 px-6 h-64 bg-gradient-to-r from-emerald-500 to-cyan-700'>
				<div className='md:w-3/5 mx-auto'>
					{session ? (
						<div>
							<button
								onClick={() => signOut()}
								className='bg-red-400 rounded-md p-2'
							>
								Log Out
							</button>
						</div>
					) : (
						<div>
							<button
								onClick={() => {
									Router.push('/api/auth/signin');
								}}
								className='bg-red-400 rounded-md p-2'
							>
								Log In
							</button>
							<button
								onClick={() => {
									Router.push('/signup');
								}}
								className='bg-red-400 rounded-md p-2 ml-4'
							>
								Sign Up
							</button>
						</div>
					)}
					<h1 className='mt-4 text-2xl font-semibold'>To Do List</h1>
					<h3>{currentDate}</h3>
					{session ? (
						<form onSubmit={addTask}>
							<input
								id='newTask'
								placeholder='What do you want to do today?'
								className='outline-0 text-black w-4/5 p-2 rounded-tl-md rounded-bl-md mt-6'
							/>
							<button className='outline-0 w-1/5 rounded-tr-md rounded-br-md bg-teal-500 p-2'>
								Submit
							</button>
						</form>
					) : (
						''
					)}
				</div>
			</div>
			{session ? (
				<div className='md:w-3/5 text-center mx-auto px-6 py-4'>
					<ul className='text-left'>
						{tasks.map((task, id) => {
							return (
								<TaskItem
									session={session}
									setTasks={setTasks}
									id={task._id}
									key={task._id}
									text={task.message}
								/>
							);
						})}
					</ul>

					<div className='w-2/5 mx-auto'>
						<button className='outline-0 font-medium text-white rounded-md w-full mt-5 bg-teal-500 p-2'>
							Update Tasks
						</button>
					</div>
				</div>
			) : (
				''
			)}
		</div>
	);
}

export const getServerSideProps = async ({ req }) => {
	const session = await getSession({ req });
	if (session) {
		const res = await fetch(`http://localhost:3000/api/tasks/${session.id}`);

		const propTasks = await res.json();
		return { props: { propTasks } };
	}

	return { props: { tasks2: null } };
};
